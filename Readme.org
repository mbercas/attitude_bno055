#+TITLE: Tilt detection with BNO055 IMU

* Objective
The goal of this project is to figure out how to use an IMU to calculate
the tilt of an object from a given starting point.

A simple approach could be to use the Accelerometer output, but the system
will be subjected to small motions and the readings of the Accelerometer would
be too noise, in any case this is something we should check.

A more elaborated idea would be to use the angular velocities of the Gyro and integrate
them over time to calculate the angular drifts. Using the Accelerometer and Magnetometer
as references it should be possible to compensate from the typical drifts of
such systems. A common approach is using and Extended Kalman Filter that defines
the rotation angle and angular drift as the internal state and uses the quaternion
of angular velocities given by the Gyro and the "constant" gravity and Earth magnetic
field vectors as references to compensate the error. The implementation of such
system is greatly described in [[https://thepoorengineer.com/en/attitude-determination/][The poor engineer blog]]. I have also ripped of great
part of the code from the code shared at his webpage.

** Hardware
For this project I am using an Arduino Pico with ATmega 328P processor and a BlueDot BNO055 breadboard.
For the Arduino project I have added the Adafruit BNO055 library, which by default added also
the Adafruit Unified Sensor.


** References

    - [[https://www.youtube.com/watch?v=2AO_Gmh5K3Q][9-axis IMU Lesson]] by Paul McWorther, for how to set-up the hardware and an introduction
      to tilt detection in very basic terms.
    - [[https://thepoorengineer.com/en/attitude-determination/][The poor engineer blog]]. For the Attitude detection and implementation of the Kalman filter.
    - [[file:notes/adafruit-bno055-absolute-orientation-sensor.pdf][Adafruit BNO055]], for a reference to the Adafruit API and how to connect the sensor.
    - [[file:notes/bst-bno055-ds000.pdf][BNO055 Datasheet]], for the datasheet of the BNO055 sensor. This will be mostly not required
      since the Adafruit driver abstracts most of the complexity.
